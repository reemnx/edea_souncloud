{"version":3,"sources":["cmps/ActiveTrack.jsx","cmps/SearchHistory.jsx","services/utils.js","cmps/TrackPreview.jsx","cmps/TrackList.jsx","cmps/ResultsContainer.jsx","cmps/ResultsOptions.jsx","pages/Home.jsx","store/actions/trackActions.js","cmps/NavBar.jsx","App.js","serviceWorker.js","store/reducers/trackReducer.js","store/store.js","index.js"],"names":["ActiveTrack","props","currTrack","useSelector","state","user","activeTrack","useState","trackToRender","setTrack","isPlayerShown","setPlayerStatus","useEffect","JSON","parse","localStorage","getItem","setItem","stringify","console","log","className","onClick","history","push","src","artwork_url","e","stopPropagation","id","width","height","scrolling","frameborder","allow","SearchHistory","isHistoryModalShown","searchHistory","length","map","searchWord","idx","searchAgain","debounce","func","delay","delayTimer","clearTimeout","setTimeout","abbreviateNumber","value","newValue","suffixNum","Math","floor","shortValue","precision","parseFloat","pow","toPrecision","replace","toFixed","TrackPreview","track","username","title","substring","shortenStr","style","color","utils","playback_count","download_count","favoritings_count","onPlayTrack","TrackList","tracks","Fragment","key","ResultsContainer","searchParam","isListView","ResultsOptions","onNextPage","toggleListView","Home","dispatch","useDispatch","setSearchParam","setTracks","setSearchHistory","offset","setOffset","toggleHistoryModal","onSearch","a","updateSearchHistory","axios","get","tracksToSet","data","collection","splice","unshift","type","placeholder","onInput","target","setActiveTrack","component","path","NavBar","App","Boolean","window","location","hostname","match","initialState","rootReducer","combineReducers","action","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.c1033535.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\n\r\nfunction ActiveTrack(props) {\r\n    const currTrack = useSelector(state => state.user.activeTrack)\r\n    const [trackToRender, setTrack] = useState(null)\r\n    const [isPlayerShown , setPlayerStatus] = useState(false)\r\n\r\n    useEffect(() => {\r\n        if (!currTrack) {\r\n            setTrack(JSON.parse(localStorage.getItem('currTrack')))\r\n        } else setTrack(currTrack)\r\n\r\n        localStorage.setItem('currTrack', JSON.stringify(currTrack))\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        console.log('Track as been changed');\r\n    }, [trackToRender])\r\n\r\n    function onImg(e){\r\n        e.stopPropagation()\r\n        setPlayerStatus(isPlayerShown => !isPlayerShown)\r\n    }\r\n\r\n    if (!trackToRender) return 'Loading...'\r\n    return (\r\n        <div className=\"active-track-screen flex align-center justify-center\" onClick={() => props.history.push('/')}>\r\n            <div className=\"active-track-modal flex column\">\r\n                <img src={trackToRender.artwork_url} onClick={onImg} />\r\n                {isPlayerShown && <iframe\r\n                    src={`https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/${trackToRender.id}?auto_play=true`}\r\n                    width=\"100%\" height=\"166\" scrolling=\"no\" frameborder=\"no\" allow=\"autoplay\"></iframe>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ActiveTrack\r\n","import React from 'react'\r\n\r\nfunction SearchHistory(props) {\r\n    const {isHistoryModalShown,searchHistory} = props\r\n    return (\r\n        <div className=\"search-history flex align-center space-between\" onClick={props.onClick}>\r\n            <p>Search History</p>\r\n            <span className={isHistoryModalShown ? 'arrow-up' : 'arrow-down'} />\r\n            {(isHistoryModalShown && searchHistory.length > 0) && <div className=\"searches flex column\">\r\n                {searchHistory.map((searchWord, idx) => {\r\n                    return <div className=\"history-item flex align-center\">\r\n                        <p>{idx + 1})</p>\r\n                        <p>\"<span>{searchWord}</span>\"</p>\r\n                        <p onClick={() => props.searchAgain(searchWord)}>Search Again</p>\r\n                    </div>\r\n                })}\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchHistory\r\n","const debounce = (func, delay) => {\r\n    console.log('Debounce');\r\n    \r\n    let delayTimer ;\r\n    \r\n    return () => {\r\n        if(delayTimer) clearTimeout(delayTimer)\r\n        delayTimer = setTimeout(() => {\r\n            func()\r\n        }, delay);\r\n    }\r\n}\r\n\r\nfunction abbreviateNumber(value) {\r\n    var newValue = value;\r\n    if (value >= 1000) {\r\n        var suffixes = [\"\", \"k\", \"m\", \"b\",\"t\"];\r\n        var suffixNum = Math.floor( (\"\"+value).length/3 );\r\n        var shortValue = '';\r\n        for (var precision = 2; precision >= 1; precision--) {\r\n            shortValue = parseFloat( (suffixNum != 0 ? (value / Math.pow(1000,suffixNum) ) : value).toPrecision(precision));\r\n            var dotLessShortValue = (shortValue + '').replace(/[^a-zA-Z 0-9]+/g,'');\r\n            if (dotLessShortValue.length <= 2) { break; }\r\n        }\r\n        if (shortValue % 1 != 0)  shortValue = shortValue.toFixed(1);\r\n        newValue = shortValue+suffixes[suffixNum];\r\n    }\r\n    return newValue;\r\n}\r\n\r\nexport default{\r\n    debounce,\r\n    abbreviateNumber\r\n}","import React from 'react'\r\nimport utils from '../services/utils'\r\n\r\nfunction TrackPreview(props) {\r\n    const { track } = props\r\n\r\n    function substrMax60(str) {\r\n        const shortenStr = str.substring(0, 60)\r\n        return shortenStr + \" \" + \"...\"\r\n    }\r\n\r\n    return (\r\n        <div className=\"track-preview\" >\r\n            <img src={(track.artwork_url)? track.artwork_url : 'https://us.123rf.com/450wm/pavelstasevich/pavelstasevich1811/pavelstasevich181101065/112815953-stock-vector-no-image-available-icon-flat-vector.jpg?ver=6'} />\r\n\r\n            <div className=\"track-info\">\r\n\r\n                <div>\r\n                    <p>{track.user.username}</p>\r\n                    <h5>{track.title.length > 60 ? substrMax60(track.title) : track.title}</h5>\r\n                </div>\r\n\r\n                <div className=\"track-tags\">\r\n\r\n                    <div className=\"flex align-center\">\r\n                        <span className=\"repeat\" />\r\n                        <p style={{ color: '#9a9c9b' }}>{utils.abbreviateNumber(track.playback_count)}</p>\r\n                    </div>\r\n\r\n                    <div className=\"flex align-center\">\r\n                        <span className=\"downloads\" />\r\n                        <p style={{ color: '#9a9c9b' }}>{utils.abbreviateNumber(track.download_count)}</p>\r\n                    </div>\r\n\r\n                    <div className=\"flex align-center\">\r\n                        <span className=\"star\" />\r\n                        <p style={{ color: '#9a9c9b' }}>{utils.abbreviateNumber(track.favoritings_count)}</p>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n            <button onClick={() => props.onPlayTrack(track)}>Play Me</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TrackPreview\r\n","import React from 'react'\r\nimport TrackPreview from '../cmps/TrackPreview'\r\n\r\nfunction TrackList(props) {\r\n    const {tracks} = props\r\n    return (\r\n       <React.Fragment>\r\n           {tracks.map((track,idx)=>{\r\n               return <TrackPreview onPlayTrack={props.onPlayTrack} track={track} key={idx} />\r\n           })}\r\n       </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default TrackList\r\n","import React from 'react'\r\nimport TrackList from '../cmps/TrackList'\r\n\r\nfunction ResultsContainer(props) {\r\n    const {searchParam,isListView,tracks} = props\r\n    return (\r\n        <div className=\"search-results-container\">\r\n            <h4>Search Results for: \"<span>{searchParam}</span>\"</h4>\r\n            <div className={isListView ? 'list' : 'tile'}>\r\n                <TrackList onPlayTrack={props.onPlayTrack} tracks={tracks} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ResultsContainer\r\n","import React from 'react'\r\n\r\nfunction ResultsOptions(props) {\r\n    return (\r\n        <div className=\"results-options flex align-center space-between\">\r\n            <span className=\"next\" onClick={props.onNextPage} />\r\n\r\n            <div className=\"flex align-center\">\r\n                <span className=\"list-btn\" onClick={() => props.toggleListView(true)} />\r\n                <span className=\"tile-btn\" onClick={() => props.toggleListView(false)} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ResultsOptions\r\n","//React Imports\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { Route, Switch } from 'react-router-dom';\r\n//Store Imports\r\nimport { setActiveTrack } from '../store/actions/trackActions'\r\n//Libs Imports\r\nimport axios from 'axios'\r\n//Cmps\r\nimport ActiveTrack from '../cmps/ActiveTrack'\r\nimport SearchHistory from '../cmps/SearchHistory'\r\nimport ResultsContainer from '../cmps/ResultsContainer'\r\nimport ResultsOptions from '../cmps/ResultsOptions'\r\n\r\n\r\nfunction Home(props) {\r\n    const initSearchWord = 'Michael Jackson'\r\n    const dispatch = useDispatch()\r\n    const [searchParam, setSearchParam] = useState(initSearchWord)\r\n    const [tracks, setTracks] = useState([])\r\n    const [searchHistory, setSearchHistory] = useState([])\r\n    const [isListView, toggleListView] = useState(true)\r\n    const [offset, setOffset] = useState(0)\r\n    const [isHistoryModalShown, toggleHistoryModal] = useState(false)\r\n\r\n    useEffect(() => {\r\n\r\n        if(localStorage.getItem('layout')) toggleListView(JSON.parse(localStorage.getItem('layout')))\r\n\r\n        if (localStorage.getItem('searchHistory')) {\r\n            setSearchHistory(JSON.parse(localStorage.getItem('searchHistory')))\r\n        }\r\n\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        onSearch()\r\n\r\n    }, [offset])\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('layout' , JSON.stringify(isListView))\r\n    }, [isListView])\r\n\r\n    async function onSearch(searchWord='') {\r\n        if (!searchParam) return\r\n        updateSearchHistory()\r\n        try {\r\n            let tracksToSet = await \r\n            axios.get(`https://api.soundcloud.com/tracks?linked_partitioning=&client_id=ggX0UomnLs0VmW7qZnCzw&offset=${offset}&q=${searchWord? searchWord : searchParam}&limit=6`)\r\n            setTracks(tracksToSet.data.collection)\r\n        } catch (err) {\r\n            console.log('There is an error to fetch tracks:', err);\r\n        }\r\n    }\r\n\r\n    function updateSearchHistory() {\r\n        if (searchParam === initSearchWord) return\r\n        if (searchHistory.length === 5) {\r\n            searchHistory.splice(4, 1);\r\n        }\r\n        searchHistory.unshift(searchParam)\r\n        localStorage.setItem('searchHistory', JSON.stringify(searchHistory))\r\n    }\r\n\r\n    function onInput({ target }) {\r\n        setSearchParam(target.value)\r\n    }\r\n\r\n    function onNextPage() {\r\n        setOffset(offset => offset + 6)\r\n    }\r\n\r\n    function onHistory() {\r\n        if (!searchHistory.length) return\r\n        toggleHistoryModal(isHistoryModalShown => !isHistoryModalShown)\r\n    }\r\n\r\n    function searchAgain(searchWord) {\r\n        setSearchParam(searchWord)\r\n        onSearch(searchWord)\r\n    }\r\n\r\n    function onPlayTrack(track) {\r\n        dispatch(setActiveTrack(track))\r\n        props.history.push(`/track/${track.id}`)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"home-container flex justify-center\">\r\n                <div className=\"content-wraper content flex column\">\r\n\r\n                    <div className=\"search-box flex align-center space-between\">\r\n\r\n                        <div className=\"flex align-center\">\r\n                            <input type=\"text\" placeholder=\"What whould you like to hear?\" value={searchParam} onInput={onInput} />\r\n                            <button onClick={onSearch}>Go</button>\r\n                        </div>\r\n\r\n                        < SearchHistory\r\n                            onClick={onHistory}\r\n                            isHistoryModalShown={isHistoryModalShown}\r\n                            searchHistory={searchHistory}\r\n                            searchAgain={searchAgain} />\r\n                    </div>\r\n\r\n                    {tracks.length > 0 && <ResultsContainer\r\n                        isListView={isListView}\r\n                        searchParam={searchParam}\r\n                        tracks={tracks}\r\n                        onPlayTrack={onPlayTrack} />}\r\n\r\n                    {tracks.length > 0 && <ResultsOptions onNextPage={onNextPage} toggleListView={toggleListView} />}\r\n\r\n                </div>\r\n            </div>\r\n\r\n            {/* Nest route to show active song while home in background */}\r\n            <Switch>\r\n                <Route component={ActiveTrack} path=\"/track/:id\" />\r\n            </Switch>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","export function setActiveTrack(track){\r\n    return dispatch => {\r\n        return dispatch({ type: 'SET_ACTIVE_TRACK', track })\r\n    }\r\n}\r\n","import React from 'react'\r\n\r\nfunction NavBar() {\r\n    return (\r\n        <div className=\"nav-container flex align-center justify-center\">\r\n            <nav className=\"flex align-center content\">\r\n                <span className=\"nav-logo\" />\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NavBar\r\n","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport Home from './pages/Home.jsx'\r\nimport NavBar from './cmps/NavBar.jsx'\r\nimport ActiveTrack from './cmps/ActiveTrack'\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <div className=\"app-container\">\r\n      <NavBar />\r\n        <Switch>\r\n          <Route component={Home} path=\"/\" />\r\n        </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","const initialState = {\r\n    activeTrack: null\r\n}\r\n\r\nexport function trackReducer(state = initialState, action) {\r\n\r\n    switch (action.type) {\r\n        \r\n        case 'SET_ACTIVE_TRACK':\r\n            return {\r\n                ...state,\r\n                activeTrack: action.track\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n","import { trackReducer } from './reducers/trackReducer'\r\n\r\nimport { createStore, combineReducers, applyMiddleware, compose } from 'redux'\r\nimport thunk from 'redux-thunk'\r\n\r\nconst rootReducer = combineReducers({\r\n        user: trackReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nexport const store = createStore(rootReducer,\r\n    composeEnhancers(applyMiddleware(thunk))\r\n)\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './styles/global.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { store } from './store/store.js';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <Router>\r\n      <App />\r\n    </Router>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}